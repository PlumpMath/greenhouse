0.5.0 (10/12/2010)
    - first official release

0.5.1 (10/12/2010)
    - simple packaging fix

0.5.2 (10/25/2010)
    - fixes to emulation.patched
    - fixed a bug with timeouts in the poll-based poller where it used
      seconds where the poll syscall uses milliseconds, so it was
      blocking for 1/1000th of the requested time
    - fixed a bug where coroutines blocked on pool.Pool.get or
      pool.OrderedPool.get would remain blocked indefinitely if the pool
      was close()d.
    - fixed bugs with the cleanup of IO objects (sockets, files, pipes,
      etc)

0.6.0 (1/14/2011)
    - new backdoor module
        - backdoor.run_backdoor creates a small server that runs a
          python interpreter in any connections made to it
        - backdoor.backdoor_handler takes an already-connected socket
          and runs a python interpreter over it
    - some fixes to utils.Channel, and then promoted it to the global
      greenhouse namespace and added documentation.
    - there was a bug in re-starting pools, calling start() after a call
      to close() now works
    - fix to emulation.patched -- it only worked on pre-imported stdlib
      modules before
    - new things emulated:
        - select.select
        - select.poll
        - select.epoll
        - select.kqueue
    - new functions for sending an exception to another coroutine
        - scheduler.schedule_exception
        - scheduler.schedule_exception_in
        - scheduler.schedule_exception_at
        - and scheduler.end exits the targeted coroutine immediately
    - new function io.wait_fds blocks the current coroutine waiting
      directly on file descriptor integers
    - new function scheduler.handle_exception performs the same handling
      on the provided exception as if it were unhandled and ended the
      coroutine (using the registered handlers)
    - utils.Queue uses the Empty and Full exception classes from the
      stdlib Queue module, and the emulation doesn't patch them any more

1.0.0 (9/16/2011)
    - refactored and much more complete emulation
    - cooperative dns lookups with dnspython installed, and the ability to
      use that in monkey-patching the socket module
    - greenhouse.ext.zmq with a wait_socks that works like wait_fds but also
      accepts pyzmq sockets
    - cooperative pyzmq emulation
    - greenhouse.ext.psycopg2.wait_callback, for psycopg2.set_wait_callback to
      make psycopg2 behave cooperatively
    - every public interface has a thorough docstring
    - scheduler trace hooks
    - global/local exception handlers
    - scheduler.handle_exception to run the handlers manually
    - signals interrupt emulated system calls
    - optional dependency on python-btree substitutes a more efficient timer
      mechanism
    - utils module renamed to util
    - util.Channel is gone
    - util.Counter added
    - util.LifoQueue and PriorityQueue added. feature-parity with stdlib Queue
    - util.Timer re-written to be a Thread subclass, behave more like stdilb
      threading.Timer

2.0.0 (5/9/2012)
    - scheduler.set_ignore_interrupts allows globally enabling restarting of
      emulated syscalls through signal interruptions
    - emulation.patched_context is a new patching mechanism in the form of a
      context manager
    - scheduler.{local_,global_,}trace_hook functions dropped
      "trace" from the names, they were getting long
    - added scheduler.remove_{local_,global_,}hook functions for removing hooks
    - backdoors respond to Ctrl-D from telnet by closing the connection
    - backdoor connections no longer share a locals dict when one was passed in
      to run_backdoor

2.0.1 (5/9/2012)
    - backdoor bugfix, it was rejecting LF line endings, required CRLF

2.1.0 (9/8/2012)
    - cleanup and simplification of backdoor code after the recent work on it
    - epoll.fromfd and kqueue.fromfd infinite recursion fixes
    - incoming/outgoing stdin/out/err [un]patching hooks around backdoors
    - docstring annotations of every blocking function through the API
    - emulation completeness and correctness improved on the threading module
    - logging added at low priorities for important events in the scheduler,
      backdoor, emulation
    - match updates in pypy
    - SSL emulation
